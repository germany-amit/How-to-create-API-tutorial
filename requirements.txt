# File: requirements.txt
# Streamlit is the web framework for the app's user interface.
streamlit==1.36.0

# PyYAML is used for generating the OpenAPI spec in YAML format.
PyYAML==6.0.1

# Jinja2 is the templating engine used to generate the FastAPI code.
Jinja2==3.1.4

# Requests is used in the client demo to make API calls.
requests==2.32.3

# The official Google Generative AI library for interacting with the Gemini API.
google-generativeai==0.7.0
```{markdown}
# File: README.md
# Agentic AI API Engineer

This project demonstrates a cradle-to-cradle API engineering workflow using Python and Streamlit. It uses the Gemini API to take a natural language requirement and generate a complete API project, including the OpenAPI specification, FastAPI code, and a client demo.

### Features
- **Requirement-to-Code:** Generate API endpoints and logic from a simple text prompt.
- **OpenAPI Spec:** Automatically create a standardized API blueprint.
- **FastAPI Backend:** Scaffold a basic, runnable backend application.
- **Client Demo:** A Python script to show how to interact with the new API.
- **Project ZIP:** Download a complete, ready-to-use project folder.

### How to Run

1.  **Clone the Repository:**
    ```bash
    git clone https://github.com/your-username/your-repo-name.git
    cd your-repo-name
    ```
2.  **Set up Virtual Environment:**
    ```bash
    python3 -m venv venv
    source venv/bin/activate
    ```
3.  **Install Dependencies:**
    ```bash
    pip install -r requirements.txt
    ```
4.  **Set your Gemini API Key:**
    Create a file named `.streamlit/secrets.toml` in the project directory and add your API key.
    ```toml
    # .streamlit/secrets.toml
    GEMINI_API_KEY="your_api_key_here"
    ```
5.  **Run the Streamlit App:**
    ```bash
    streamlit run app.py
    ```

### Project Structure
- `app.py`: The main Streamlit application code.
- `requirements.txt`: The list of all necessary Python packages.
- `README.md`: This file.

---
**Disclaimer:** This project is a simplified demonstration and is not suitable for a production environment.
